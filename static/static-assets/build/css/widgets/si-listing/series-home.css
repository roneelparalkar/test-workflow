.waf-series-home{margin:0 -10px;background-color:#F2F0F0;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;border-radius:5px}.waf-series-home .head-tab li:not(:last-child){display:none}.waf-series-home .waf-body{display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;align-items:center}.waf-series-home .first-list{margin:0 -5px;flex-basis:50%;max-width:50%}.waf-series-home .second-list{flex-basis:50%;max-width:50%}.waf-series-home .article-wrap{position:relative}.waf-series-home .article-item{width:100%}.waf-series-home .list-group-wrap{display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;overflow:auto;width:100%}.waf-series-home .list-group-wrap .article-item{width:100%;flex-shrink:0}.waf-series-home .list-group-wrap .article-title{height:48px;line-height:16px;-webkit-line-clamp:3;margin-bottom:20px}.waf-series-home .list-group-wrap .article-content{padding:10px 0}.waf-series-home .third-list{flex-direction:column}.waf-series-home .third-list .article-item{padding:10px 5px}.waf-series-home .layout-wrapper{padding:0 0 0 10px}@media screen and (min-width: 767px){.waf-series-home{margin:0}.waf-series-home .layout-wrapper{padding:0 15px}.waf-series-home .third-list{flex-direction:row;width:100%}.waf-series-home .third-list .article-item{flex-basis:33.33%;max-width:33.33%}.waf-series-home .list-group-wrap .article-item{width:100%}.waf-series-home .first-list{flex-basis:66.66%;max-width:66.66%}.waf-series-home .first-list .article-title{font-size:18px;color:#fff;line-height:26px;height:50px;-webkit-line-clamp:2}.waf-series-home .first-list .article-thumbnail{position:relative;overflow:hidden}.waf-series-home .first-list .article-thumbnail a:before{content:"";position:absolute;bottom:0;width:100%;height:100%;z-index:1;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;border-radius:5px;background:transparent linear-gradient(180deg, rgba(26,61,135,0) 0%, #0B2C5D 100%) 0% 0% no-repeat padding-box}.waf-series-home .first-list .article-content{position:absolute;bottom:20px;width:100%;padding:0 10px;z-index:1}.waf-series-home .second-list{flex-basis:33.33%;max-width:33.33%;flex-direction:column;margin:0;padding:0 10px;-webkit-justify-content:space-between;-moz-justify-content:space-between;-ms-justify-content:space-between;justify-content:space-between;-ms-flex-pack:space-between}.waf-series-home .second-list .article-wrap{display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-align-items:flex-start;-moz-align-items:flex-start;-ms-align-items:flex-start;align-items:flex-start}.waf-series-home .second-list .article-thumbnail{flex-basis:30%;max-width:30%}.waf-series-home .second-list .article-content{flex-basis:70%;max-width:70%;padding:0 0 0 10px}}@media screen and (min-width: 767px) and (max-width: 768px){.waf-series-home .list-group-wrap{flex-direction:column}.waf-series-home .first-list,.waf-series-home .second-list{flex-basis:100%;max-width:100%}.waf-series-home .second-list{flex-wrap:wrap;flex-direction:row;padding:0}.waf-series-home .second-list .article-item{flex-basis:50%;max-width:50%;margin:15px 0}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
