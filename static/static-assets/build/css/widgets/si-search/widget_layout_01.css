.waf-result-listing .head-wrap{margin-bottom:20px}.waf-result-listing .article-list{flex-wrap:wrap;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;margin:0 -5px}.waf-result-listing .article-item{flex-shrink:0;margin-bottom:10px;padding:0 7px;flex-basis:50%;max-width:50%}.waf-result-listing .article-title{font-size:12px;line-height:18px;height:34px;display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden;-webkit-line-clamp:2}.waf-result-listing .article-content{padding-top:5px}.waf-result-listing .pagination-wrap{display:block}.waf-result-listing .third-list .article-content{flex-direction:column;-webkit-align-items:flex-start;-moz-align-items:flex-start;-ms-align-items:flex-start;align-items:flex-start}.waf-result-listing .third-list .article-content .item-type-icon{display:none}.waf-result-listing .third-list .article-title{padding:0}.waf-result-listing .third-list .article-wrap:after{display:none}@media screen and (min-width: 767px){.waf-result-listing .article-item{flex-basis:25%;max-width:25%}.waf-result-listing .article-title{font-size:14px;line-height:22px;height:42px;margin-bottom:20px}.waf-result-listing .article-content{padding-top:10px}}.waf-search .head-wrap{flex-direction:column;-webkit-align-items:flex-start;-moz-align-items:flex-start;-ms-align-items:flex-start;align-items:flex-start}.waf-search .head-wrap>.title{display:none}.waf-search .dropdown-wrap .waf-select-box{width:100%}.waf-search .search-result-info{display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-moz-align-items:flex-start;-ms-align-items:flex-start;align-items:flex-start}.waf-search .search-result-info .title{font-size:12px;line-height:17px}.waf-search .search-count{font-size:12px;line-height:17px;color:#656565}.waf-search .search-wrap form{position:relative}.waf-search .search-wrap .filter-container{margin:10px 0;height:35px}.waf-search .search-wrap .btn-search{position:absolute;width:29px;height:29px;right:4px;top:3px;border:none;background:#225CC2;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;border-radius:5px}.waf-search .search-wrap .btn-search:before{content:"\e85b";color:#fff;font-size:18px}.waf-search .search-bar{width:100%}.waf-search .search-bar input{width:100%;border:1px solid #DCDCDC;background:#fafafa;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;border-radius:5px;height:35px}@media screen and (min-width: 767px){.waf-search .search-bar{width:100%}.waf-search .search-result-info{flex-direction:row;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;align-items:center}.waf-search .search-wrap{display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-justify-content:space-between;-moz-justify-content:space-between;-ms-justify-content:space-between;justify-content:space-between;-ms-flex-pack:space-between;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;align-items:center}.waf-search .search-wrap form{flex-basis:75%;max-width:75%;display:inline-table}.waf-search .search-wrap .dropdown-wrap{flex-basis:24%;max-width:24%}.waf-search .search-wrap .waf-select-box{height:35px;line-height:32px}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
